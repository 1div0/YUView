name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: 
          # - os: ubuntu-16.04
          #   QT_INSTALL_DIR: /home/travis/build
          #   QT_FILE: qtBase_5.14.2_xenial.zip
          #   LIBDE265_REMOTE: libde265.so
          #   LIBDE265_LOCAL: libde265-internals.so
          #   ARTIFACT_NAME: VTM-Ubuntu
          #   UNZIP_COMMAND: unzip -qa
          - os: windows-2019
            QT_INSTALL_DIR: /c/Users/travis/build
            QT_FILE: qtBase_5.14.2_win.zip
            QT_DEPLOY: qtTools_5.14.2_win.zip
            LIBDE265_REMOTE: libde265.dll
            LIBDE265_LOCAL: libde265.dll
            ARTIFACT_NAME: YUView-Win.zip
            UNZIP_COMMAND: 7z x
          # - os: macos-10.15
          #   QT_INSTALL_DIR: /Users/travis/build
          #   QT_FILE: qtBase_5.14.2_mac.zip
          #   QT_DEPLOY: qtTools_5.14.2_mac.zip
          #   LIBDE265_REMOTE: libde265.dylib
          #   LIBDE265_LOCAL: libde265-internals.dylib
          #   ARTIFACT_NAME: VTM-Macos
          #   UNZIP_COMMAND: unzip -qa
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Install Qt base
      run: |
        echo GITHUB_WORKSPACE: $GITHUB_WORKSPACE
        echo HOME: $HOME
        echo "::debug GITHUB_WORKSPACE: $GITHUB_WORKSPACE HOME: $HOME"
        cd $GITHUB_WORKSPACE
        pwd
        cd ../../
        pwd
        mkdir YUViewQt
        cd YUViewQt
        mkdir YUViewQt
        cd YUViewQt
        pwd
        ls
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.14.2/${{matrix.QT_FILE}} -o Qt.zip
        ls
        ${{matrix.UNZIP_COMMAND}} Qt.zip
        echo "::add-path::$GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin"
      shell: bash
    - name: Install Qt deploy tools
      run: |
        cd $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt
        pwd
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtDeployTools-5.14.2/${{matrix.QT_DEPLOY}} -o deployQt.zip
        echo ${{matrix.UNZIP_COMMAND}} deployQt.zip
        ${{matrix.UNZIP_COMMAND}} deployQt.zip
        ls
      shell: bash
      if: matrix.os == 'macos-10.15' || matrix.os == 'windows-2019'
    - name: Install Macdeploy Qt
      run: |
        cp $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qttools/bin/macdeployqt $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin/macdeployqt
        strip $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin/macdeployqt
      if: matrix.os == 'macos-10.15'
    - name: Install Linuxdeployqt
      run: |
        curl -L https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -o linuxdeployqt-6-x86_64.AppImage
        chmod a+x linuxdeployqt-6-x86_64.AppImage
      if: matrix.os == 'ubuntu-16.04'
    - name: Install libde265
      run: |
        curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/${{matrix.LIBDE265_REMOTE}} -o ${{matrix.LIBDE265_LOCAL}}
        curl -L https://raw.githubusercontent.com/ChristianFeldmann/libde265/master/COPYING -o libde265License.txt
        pwd
        ls
      shell: bash
    - name: Install openSSL
      run: |
        mkdir openSSL
        cd openSSL
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1g/openSSL_1_1_1g_win.zip -o openSSL.zip
        ${{matrix.UNZIP_COMMAND}} openSSL.zip
        cd ..
        pwd
        ls
      if: matrix.os == 'windows-2019'
      shell: bash
    - name: Install jom (Windows only)
      run: choco install jom
      if: matrix.os == 'windows-2019'
    - name: Build Linux/Mac
      run: |
        cd $GITHUB_WORKSPACE
        export PATH=$GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin:$PATH
        echo $PATH
        mkdir build
        cd build
        qmake ..
        make -j 2
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'macos-10.15'
    - name: Build Windows
      run: |
        dir
        echo %Path%
        mkdir build
        cd build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        d:\a\YUViewQt\YUViewQt\Qt\bin\qmake ..
        jom
        cd ..
        mkdir deploy
        cd deploy
        cp ../build/YUViewApp/YUView.exe .
        d:\a\YUViewQt\YUViewQt\Qttools\bin\windeployqt.exe --release --dir d:\a\YUView\YUView\deploy --no-compiler-runtime YUView.exe
        cp ../openSSL/*.dll .
        mkdir decoder
        cp ..\libde265.dll decoder
        cp ..\libde265License.txt decoder
        cp ../LICENSE.GPL3 .
        dir
        cd ..
        dir
        python deployment/versioning.py -d deploy -o deploy/versioninfo.txt
        cd deploy
        dir
        cd ..
        7z a YUView-Win.zip ./deploy/*
      shell: cmd
      if: matrix.os == 'windows-2019'
    - name: Wix Windows
      run: |
        ls
        cd /c/
        ls
        cd Program\ Files\ \(x86\)
        ls
        cd Common\ Files
        ls
        cd Merge\ Modules
        ls
        cd $GITHUB_WORKSPACE
        cd deployment/wix
        cp /c/Program\ Files\ \(x86\)/Common\ Files/Merge\ Modules/Microsoft_VC140_CRT_x64.msm .
        ls
        echo ---------
        echo $WIX
        echo ----- heat
        cd $WIX
        ls
        "${WIX}heat.exe" dir ../../deploy -gg -dr APPLICATIONFOLDER -srd -sreg -cg YUViewComponents -out harvestedDirectory.wxs
        "${WIX}candle.exe" -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 -ext TRAVIS_BUILD_DIR/../wix311/WixUIExtension.dll YUView.wxs
        "${WIX}candle.exe" -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 harvestedDirectory.wxs
        "${WIX}Light.exe" -b ../../deploy -out bin/Release/YUViewSetup.msi -pdbout bin/Release/YUViewSetup.wixpdb -cultures:null -ext $TRAVIS_BUILD_DIR/../wix311/WixUIExtension.dll -contentsfile obj/Release/YUViewSetup.wixproj.BindContentsFileListnull.txt -outputsfile obj/Release/YUViewSetup.wixproj.BindOutputsFileListnull.txt -builtoutputsfile obj/Release/YUViewSetup.wixproj.BindBuiltOutputsFileListnull.txt obj/Release/YUView.wixobj obj/Release/harvestedDirectory.wixobj
        ls
      shell: bash
      if: matrix.os == 'windows-2019'
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.ARTIFACT_NAME}}
        path: ${{matrix.ARTIFACT_NAME}}

  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29