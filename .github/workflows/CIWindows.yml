name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: 
          - os: windows-2019
            auto_update: true
            ARTIFACT_NAME: YUView-Win.zip
          - os: windows-2019
            auto_update: false
            ARTIFACT_NAME: YUView-Win-noautoupdate.zip
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Install Qt base
      run: |
        cd ../../
        mkdir -p YUViewQt/YUViewQt
        cd YUViewQt/YUViewQt
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.14.2/qtBase_5.14.2_win.zip -o Qt.zip
        7z x  Qt.zip
        echo "::add-path::$GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin"
      shell: bash
    - name: Install Qt deploy tools
      run: |
        cd $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtDeployTools-5.14.2/qtTools_5.14.2_win.zip -o deployQt.zip
        7z x deployQt.zip
      shell: bash
    - name: Install libde265
      run: |
        curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/libde265.dll -o libde265.dll
        curl -L https://raw.githubusercontent.com/ChristianFeldmann/libde265/master/COPYING -o libde265License.txt
      shell: bash
    - name: Install jom
      run: |
        cd $GITHUB_WORKSPACE
        curl -L http://download.qt.io/official_releases/jom/jom.zip -o jom.zip
        7z x jom.zip -ojom
        cp jom/jom.exe $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin/
      shell: bash
    - name: Install openSSL
      run: |
        mkdir openSSL
        cd openSSL
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1g/openSSL_1_1_1g_win.zip -o openSSL.zip
        7z x openSSL.zip
        cd ..
      shell: bash
    - name: Activate auto update
      run: sed -i -- "s/#define UPDATE_FEATURE_ENABLE 0/#define UPDATE_FEATURE_ENABLE 1/g" YUViewLib/src/common/typedef.h
      shell: bash
      if: matrix.auto_update == true
    - name: Build Windows
      run: |
        mkdir build
        cd build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        d:\a\YUViewQt\YUViewQt\Qt\bin\qmake ..
        jom
        nmake check
        cd ..
      shell: cmd
    - name: WindeployQT
      run: |
        mkdir deploy
        cd deploy
        cp ../build/YUViewApp/YUView.exe .
        d:\a\YUViewQt\YUViewQt\Qttools\bin\windeployqt.exe --release --dir d:\a\YUView\YUView\deploy --no-compiler-runtime YUView.exe
        cp ../openSSL/*.dll .
        mkdir decoder
        cp ..\libde265.dll decoder
        cp ..\libde265License.txt decoder
        cp ../LICENSE.GPL3 .
        cd ..
        python deployment/versioning.py -d deploy -o deploy/versioninfo.txt
        mkdir artifacts
        7z a artifacts/YUView-Win.zip ./deploy/*
      shell: cmd
    - name: Wix Windows
      run: |
        cd $GITHUB_WORKSPACE/deployment/wix
        cp /c/Program\ Files\ \(x86\)/Common\ Files/Merge\ Modules/Microsoft_VC140_CRT_x64.msm .
        "${WIX}\bin\heat.exe" dir ../../deploy -gg -dr APPLICATIONFOLDER -srd -sreg -cg YUViewComponents -out harvestedDirectory.wxs
        "${WIX}\bin\candle.exe" -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 -ext "${WIX}\bin\WixUIExtension.dll" YUView.wxs
        "${WIX}\bin\candle.exe" -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 harvestedDirectory.wxs
        "${WIX}\bin\Light.exe" -b ../../deploy -out bin/Release/YUViewSetup.msi -pdbout bin/Release/YUViewSetup.wixpdb -cultures:null -ext "${WIX}\bin\WixUIExtension.dll" -contentsfile obj/Release/YUViewSetup.wixproj.BindContentsFileListnull.txt -outputsfile obj/Release/YUViewSetup.wixproj.BindOutputsFileListnull.txt -builtoutputsfile obj/Release/YUViewSetup.wixproj.BindBuiltOutputsFileListnull.txt obj/Release/YUView.wixobj obj/Release/harvestedDirectory.wixobj
        cd $GITHUB_WORKSPACE
        cp deployment/wix/bin/Release/YUViewSetup.msi ./
      shell: bash
      if: matrix.auto_update == true
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.ARTIFACT_NAME}}
        path: artifacts
    - name: Upload Windows installer Artifact
      uses: actions/upload-artifact@v2
      with:
        name: YUViewSetup.msi
        path: ./YUViewSetup.msi
      if: matrix.auto_update == true

  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29