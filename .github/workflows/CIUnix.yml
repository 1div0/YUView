name: C/C++ CI Linux/Mac

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: 
          - os: ubuntu-16.04
            QT_FILE: qtBase_5.14.2_xenial.zip
            LIBDE265_REMOTE: libde265.so
            LIBDE265_LOCAL: libde265-internals.so
            ARTIFACT_NAME: YUView.AppImage
          - os: ubuntu-18.04
            QT_FILE: qtBase_5.14.2_bionic.zip
            LIBDE265_REMOTE: libde265.so
            LIBDE265_LOCAL: libde265-internals.so
          - os: macos-10.15
            QT_FILE: qtBase_5.14.2_mac.zip
            LIBDE265_REMOTE: libde265.dylib
            LIBDE265_LOCAL: libde265-internals.dylib
            ARTIFACT_NAME: YUView-Mac.zip
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Install Qt base
      run: |
        cd ../../
        mkdir -p YUViewQt/YUViewQt
        cd YUViewQt/YUViewQt
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.14.2/${{matrix.QT_FILE}} -o Qt.zip
        unzip -qa Qt.zip
        echo "::add-path::$GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin"
      shell: bash
    - name: Install MacDeployQT
      run: |
        cd $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtDeployTools-5.14.2/qtTools_5.14.2_mac.zip -o deployQt.zip
        unzip -qa deployQt.zip
      shell: bash
      if: matrix.os == 'macos-10.15'
    - name: Install Macdeploy Qt
      run: |
        cp $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qttools/bin/macdeployqt $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin/macdeployqt
        strip $GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin/macdeployqt
      if: matrix.os == 'macos-10.15'
    - name: Install Linuxdeployqt
      run: |
        curl -L https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -o linuxdeployqt-6-x86_64.AppImage
        chmod a+x linuxdeployqt-6-x86_64.AppImage
      if: matrix.os == 'ubuntu-16.04'
    - name: Install Linux packages
      run: |
        sudo apt install libgl1-mesa-dev libxkbcommon-x11-0
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04'
    - name: Install libde265
      run: |
        curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/${{matrix.LIBDE265_REMOTE}} -o ${{matrix.LIBDE265_LOCAL}}
        curl -L https://raw.githubusercontent.com/ChristianFeldmann/libde265/master/COPYING -o libde265License.txt
      shell: bash
    - name: Build Linux/Mac
      run: |
        cd $GITHUB_WORKSPACE
        export PATH=$GITHUB_WORKSPACE/../../YUViewQt/YUViewQt/Qt/bin:$PATH
        mkdir build
        cd build
        qmake ..
        make -j 2
        make check
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'macos-10.15'
    - name: Build App (Mac)
      run: |
        macdeployqt build/YUViewApp/YUView.app -always-overwrite -verbose=2
        cp ${{matrix.LIBDE265_LOCAL}} build/YUViewApp/YUView.app/Contents/MacOS/.
        cd build/YUViewApp
        # Zip
        zip -r ${{matrix.ARTIFACT_NAME}} YUView.app/
        cp ${{matrix.ARTIFACT_NAME}} $GITHUB_WORKSPACE/artifacts
      if: matrix.os == 'macos-10.15'
    - name: Build Appimage (Linux)
      run: |
        cd build
        make INSTALL_ROOT=appdir install
        $GITHUB_WORKSPACE/linuxdeployqt-6-x86_64.AppImage YUViewApp/appdir/usr/local/share/applications/de.rwth_aachen.ient.YUView.desktop -appimage -bundle-non-qt-libs -verbose=2
        mv YUView-*.AppImage YUView.AppImage
        cp YUView.AppImage $GITHUB_WORKSPACE/artifacts
      if: matrix.os == 'ubuntu-16.04'
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.ARTIFACT_NAME}}
        path: artifacts
      if: matrix.os != 'ubuntu-18.04'
    
  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29